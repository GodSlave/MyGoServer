// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gate.proto

/*
Package gate is a generated protocol buffer package.

It is generated from these files:
	gate.proto

It has these top-level messages:
	AllResponse
*/
package gate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AllResponse struct {
	// 结果
	Result []byte `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// 错误结果 如果为nil表示请求正确
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	// 错误代码 200 means right
	State int32 `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
}

func (m *AllResponse) Reset()                    { *m = AllResponse{} }
func (m *AllResponse) String() string            { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()               {}
func (*AllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AllResponse) GetResult() []byte {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AllResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AllResponse) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func init() {
	proto.RegisterType((*AllResponse)(nil), "gate.allResponse")
}

func init() { proto.RegisterFile("gate.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4f, 0x2c, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x7c, 0xb9, 0xb8, 0x13, 0x73,
	0x72, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0x52, 0x8b,
	0x4b, 0x73, 0x4a, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0xa0, 0x3c, 0x21, 0x01, 0x2e, 0xe6,
	0xdc, 0xe2, 0x74, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5,
	0xb8, 0x24, 0xb1, 0x24, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x35, 0x08, 0xc2, 0x71, 0x12, 0x88,
	0xe2, 0xd3, 0xd3, 0xd3, 0xcf, 0xcd, 0x4f, 0x29, 0xcd, 0x49, 0xd5, 0x07, 0x59, 0x90, 0xc4, 0x06,
	0xb6, 0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x26, 0x70, 0x7c, 0x6c, 0x7b, 0x00, 0x00, 0x00,
}
